@page "/workspace"

@using Blazor.Diagrams
@using Blazor.Diagrams.Core.Anchors;
@using Blazor.Diagrams.Core.Geometry;
@using Blazor.Diagrams.Core.Models;
@using Blazor.Diagrams.Core.PathGenerators;
@using Blazor.Diagrams.Core.Routers;
@using Blazor.Diagrams.Options;
@using Blazor.Diagrams.Components;
@using Blazorwasm.Models;
@using Blazorwasm.Shared;
@using Blazor.Diagrams.Core.Models.Base;


<div class="clickable" @onclick="AddNode" style="cursor: pointer;">Add</div>

<div class="wrapper">
    <CascadingValue Value="Diagram">
        <div class="diagram-container">
            <DiagramCanvas></DiagramCanvas>
        </div>
        <SideBar></SideBar>
    </CascadingValue>
</div>

@code {
    private BlazorDiagram Diagram { get; set; } = null!;

    protected override void OnInitialized()
    {
        var options = new BlazorDiagramOptions
        {
            AllowMultiSelection = true,
            Zoom =
            {
                Enabled = false,
            },
            Links =
            {
                DefaultRouter = new NormalRouter(),
                DefaultPathGenerator = new SmoothPathGenerator()
            },
        };

        Diagram = new BlazorDiagram(options);

        var firstNode = new Table();
        firstNode.Name = "First Node";
        var secondNode = new Table();
        secondNode.Name = "Second Node";
        Diagram.Nodes.Add(new[] { firstNode, secondNode });

        var leftPort = secondNode.AddPort(PortAlignment.Left);
        var rightPort = secondNode.AddPort(PortAlignment.Right);

        // The connection point will be the intersection of
        // a line going from the target to the center of the source
        var sourceAnchor = new ShapeIntersectionAnchor(firstNode);
        // The connection point will be the port's position
        var targetAnchor = new SinglePortAnchor(leftPort);

        var link = Diagram.Links.Add(new LinkModel(sourceAnchor, targetAnchor));
    }

    private void AddNode()
    {
        var newnode = Diagram.Nodes.Add(new Table());
        var LeftPort = newnode.AddPort(PortAlignment.Left);
        var RightPort = newnode.AddPort(PortAlignment.Right);
        var TopPort = newnode.AddPort(PortAlignment.Top);
        var BottomPort = newnode.AddPort(PortAlignment.Bottom);
    }
}